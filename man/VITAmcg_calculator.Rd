% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/VITAmcg_calculator.R
\name{VITAmcg_calculator}
\alias{VITAmcg_calculator}
\title{Vitamin A Calculator}
\usage{
VITAmcg_calculator(
  df,
  RETOLmcg_column = "RETOLmcg",
  CARTBEQmcg_combined_column = "CARTBEQmcg_combined",
  comment = TRUE,
  comment_col = "comments"
)
}
\arguments{
\item{df}{Required - the data.frame the data is currently stored in.}

\item{RETOLmcg_column}{Required - default: \code{'RETOLmcg'} - The name of the
column containing Retinol in mcg per 100g of Edible Portion (EP).}

\item{CARTBEQmcg_combined_column}{Required - default: \code{'CARTBEQmcg_combined'} -
Beta-carotene equivalents, in mcg per 100g of Edible Portion (EP).}

\item{comment}{Required - default: \code{TRUE} - \code{TRUE} or \code{FALSE}.
If \code{comment} is set to \code{TRUE} (as it is by default), when the
function is run a comment describing the calculation used to find the
VITA_mcg_calculated value is added to the \code{comment_col}.
If no \code{comment_col} is selected, and \code{comment = TRUE}, one is
created.}

\item{comment_col}{Optional - default: \code{'comments'} - A potential
input variable; the column which contains the metadata comments for the
food item in question. Not required if \code{comment} is set to
\code{FALSE}. If \code{comment} is set to \code{TRUE}, and the
\code{comment_col} input is not the name of a column found in the
\code{df}, the function will create a column with the name of the
\code{comment_col} input to store comments in.}
}
\value{
Original data.frame with a new \code{VITAmcg_calculated} column, and
(depending on the options selected) an additional comment/comments column
and comment.
}
\description{
Calculates VITAmcg_calculated = (RETOLmcg + (CARTBEQmcg_combined/6)).
Column names are case sensitive and an error is returned if not found.
}
\examples{
# We will go through two examples of the VITAmcg_calculator, one using standard
# names, and another with non-standard names.
breakfast_df <- breakfast_df[,c("food_code", "food_name", "RETOLmcg",
"CARTBEQmcg_combined", "comments")]
breakfast_df

# This is the first data.frame; you can see it has the food item information,
# the required columns for calculation, and a comments column. Everything
# needed to run the VITAmcg_calculator.

VitA_results <- VITAmcg_calculator(breakfast_df)

VitA_results

# You can see how the data.frame has been returned with a new column (VITAmcg_calculated)
# and an additional comment in the comments column, detailing the calculation used.

# The second example uses non-standard names, to show how to set the input parameters
# if the data.frame is not using the suggested TAGNAMEunit naming system.

breakfast_df_nonstandard <- breakfast_df_nonstandard[,c("food_code",
"food_name", "Retinol_micrograms", "Beta_Carotene_Equivalents_micrograms",
"comments_column")]

breakfast_df_nonstandard
# You can see this is the same dataset as used previously, but with differing
# column names. This will mean the function will not know what the required
# column names are, and will need the user to name them.

VitA_results_nonstandard <- VITAmcg_calculator(breakfast_df_nonstandard,
RETOLmcg_column = "Retinol_micrograms",
CARTBEQmcg_combined_column = "Beta_Carotene_Equivalents_micrograms",
comment_col = "comments_column")

VitA_results_nonstandard

# You can see how the results are the same as calculated above, regardless of
# the changed column names.

}
