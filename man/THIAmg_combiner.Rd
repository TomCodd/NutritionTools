% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/THIAmg_combiner.R
\name{THIAmg_combiner}
\alias{THIAmg_combiner}
\title{Thiamine Nutrient Combiner}
\usage{
THIAmg_combiner(
  df,
  THIAmg_column = "THIAmg",
  THIAHCLmg_column = "THIAHCLmg",
  comment = TRUE,
  comment_col = "comments"
)
}
\arguments{
\item{df}{Required - the data.frame the data is currently stored in.}

\item{THIAmg_column}{Required - default: \code{'THIAmg'} - The name of the
column containing Thiamine, vitamin B1 analysed and expressed as Thiamine
in mg per 100g of EP.}

\item{THIAHCLmg_column}{Required - default: \code{'THIAHCLmg'} - The name
of the column containing THIAHCLmg hydrochloride, vitamin B1 analysed and
expressed as Thiamine hydrochloride in mg per 100g of EP.}

\item{comment}{Required - default: \code{TRUE} - \code{TRUE} or \code{FALSE}.
If comment is set to \code{TRUE} (as it is by default), when the function
is run a comment describing the source of the
\code{THIAmg_combined} column is added to the comment_col. If no
comment_col is selected, and \code{comment = TRUE}, one is created.}

\item{comment_col}{Optional - default: \code{'comments'} - A potential
input variable; the column which contains the metadata comments for the
food item in question. Not required if the comment parameter is set to
\code{FALSE}. If set to true, and the comment_col entry is not found in
the df, it will create a column with the name of the entry.}
}
\value{
Original data.frame with a new \code{THIAmg_combined} column, and
  (depending on the options selected) an additional comment/comments column
  and comment.
}
\description{
Combines possible values for Thiamine heirachically so the
  most suitable is the one used. Considers Thiamine and Thiamine
  Hydrochloride.
}
\examples{
 #' # Two example data.frames have been created to give an example of
# using the THIAmg_combiner; one with the expected inputs, another with custom
# inputs.

breakfast_df <- breakfast_df[, c("food_code", "food_name", "THIAmg", "THIAHCLmg",
"comments")]
breakfast_df

# We start with a data.frame containing patchy values between THIAmg and THIAHCLmg. Ideally
# we would like to combine these into a single 'combined' column with as few gaps
# as possible. This is the purpose of the THIAmg_combiner.

THIA_results <- THIAmg_combiner(breakfast_df)
THIA_results

# Note how there is now a new THIAmg_combined column, with values filled in
# from the THIAmg and THIAHCLmg columns, depending on which is most appropriate.
# A comment has also been added to the comments column detailing this change.

# This works without any input beyond the data.frame containing the nutrition
# information because the function is expecting standard column names, comprised
# of the nutrient INFOODS Tagname and the unit. However, if the columns are not
# named this way, then the user must specify which column relates to which input.
# An example of this is shown below.
breakfast_df_nonstandard <- breakfast_df_nonstandard[, c("food_code", "food_name",
 "Thiamine_milligrams", "Thiamine_from_HCL_milligrams", "comments_column")]
breakfast_df_nonstandard

# You can see how the column names are different. The values remain the same
# however.

# To use these non-standard names, you must specify each input - as shown below.

THIA_results_nonstandard <- THIAmg_combiner(breakfast_df,
THIAmg_column = "Thiamine_milligrams",
THIAHCLmg_column = "Thiamine_from_HCL_milligrams",
comment_col = "comments_column")

THIA_results_nonstandard

# You can see from the results that the calculation is run in exactly the same
# way, with the changed column names.

}
