% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NIAmg_calc_combiner.R
\name{NIAmg_calc_combiner}
\alias{NIAmg_calc_combiner}
\title{Niacin Calculator and Combiner}
\usage{
NIAmg_calc_combiner(
  df,
  NIAmg_column = "NIAmg",
  TRPmg_column = "TRPmg",
  NIAEQmg_column = "NIAEQmg",
  NIATRPmg_column = "NIATRPmg",
  comment = TRUE,
  comment_col = "comments"
)
}
\arguments{
\item{df}{Required - the data.frame the data is currently stored in.}

\item{NIAmg_column}{Optional - default: \code{'NIAmg'} - The name of the
column containing Niacin (preformed) in mg per 100g of Edible Portion (EP).
If unavailable, set input to \code{NA}.}

\item{TRPmg_column}{Optional - default: \code{'TRPmg'} - Tryptophan, in mg
per 100g of Edible Portion (EP). If unavailable, set input to \code{NA}.}

\item{NIAEQmg_column}{Required - default: \code{'NIAEQmg'} - The name of the
column containing Niacin equivalents, total (preformed Niacin as well as
Niacin equivalents from Tryptophan) in mg per 100g of Edible Portion
(EP). The only required input as its impossible to get 2 or more ways of
calculating \code{NIAmg_combined} without it, which is required for
the function to work.}

\item{NIATRPmg_column}{Optional - default: \code{'NIATRPmg'} - The name of the
column containing Niacin equivalents from Tryptophan, in mg per 100g of
Edible Portion (EP). If unavailable, set input to \code{NA}.}

\item{comment}{Required - default: \code{TRUE} - \code{TRUE} or \code{FALSE}.
If \code{comment} is set to \code{TRUE} (as it is by default), when the
function is run a comment describing the calculation used to find the
NIAmg_combined value is added to the \code{comment_col}.
If no \code{comment_col} is selected, and \code{comment = TRUE}, one is
created.}

\item{comment_col}{Optional - default: \code{'comments'} - A potential
input variable; the column which contains the metadata comments for the
food item in question. Not required if \code{comment} is set to
\code{FALSE}. If \code{comment} is set to \code{TRUE}, and the
\code{comment_col} input is not the name of a column found in the
\code{df}, the function will create a column with the name of the
\code{comment_col} input to store comments in.}
}
\value{
Original data.frame with a new \code{NIAmg_combined} column, and
  (depending on the options selected) an additional comment/comments column
  and comment.
}
\description{
This function calculates potential values for Niacin, and then
  combines the most appropriate ones for each item into a new value. Inputs must
  cover at least two of the following combinations: NIAmg_column,
  NIAEQmg_column + NIATRPmg_column, NIAEQmg_column + TRPmg_column. This is
  because the function can then find Niacin values in multiple ways, and
  select the most appropriate.

  The priority for use is 1st:  \code{Niacin}, 2nd: \code{Total
  Niacin Equivalents} - \code{(Tryptophan/60)}, 3rd: \code{Total Niacin
  Equivalents} - \code{Niacin Equivalents from Tryptophan}.
}
\examples{
# We will go through three examples of the NIAmg_calc_combiner, two using
# standard names, and another with non-standard names.
breakfast_df <- breakfast_df[,c("food_code", "food_name", "NIAmg", "TRPmg",
"NIAEQmg", "NIATRPmg", "comments")]
breakfast_df

# This is the first data.frame; you can see it has the food item information,
# the required columns for calculation, and a comments column. Everything
# needed to run the NIAmg_calc_combiner

NIA_results <- NIAmg_calc_combiner(breakfast_df)

NIA_results

# You can see how the data.frame has been returned with a new column (NIAmg_combined)
# and an additional comment in the comments column, detailing the calculation used.

# However, what if you don't have data for all of these nutrients? In that case,
# The nutrient in question should be set to NA. The function assumes you have
# all nutrients it needs available, and assumes the standard INFOODS TAGNAMEunit
# naming system. This is why the above example works without the need to specify
# which column is which. However, when it a column is missing, this means that
# the default input needs to be overridden by an NA value, to tell the function that
# its missing.

breakfast_df$TRPmg <- NULL

breakfast_df

# We can see the breakfast_df is now missing an input column; NIATRPmg. To run
# this function without this input, the command would be:

NIA_results_noTRP <- NIAmg_calc_combiner(breakfast_df, TRPmg_column = NA)
NIA_results_noTRP

# You can see the results have shifted. The values that had been calculated using
# TRP are now calculated using NIATRP. (Please don't worry about the discrepancy
# between the previous results and these; these nutritional figures are entirely
# fictional, and so the new calculation may shift NIAmg_combined massively. This
# is not an issue.)

# If too few inputs for calculation are inputted, then the function will show a
# warning, and not run.


# The third example uses non-standard names, to show how to set the input parameters
# if the data.frame is not using the suggested TAGNAMEunit naming system.

breakfast_df_nonstandard <- breakfast_df_nonstandard[,c("food_code",
"food_name", "Niacin_milligrams", "Tryptophan_milligrams", "Niacin_eq_milligrams",
"Niacine_from_TRP_mg", "comments_column")]

breakfast_df_nonstandard
# You can see this is the same dataset as used previously, but with differing
# column names. This will mean the function will not know what the required
# column names are, and will need the user to name them.

NIA_results_nonstandard <- NIAmg_calc_combiner(breakfast_df_nonstandard,
NIAmg_column = "Niacin_milligrams",
TRPmg_column = "Tryptophan_milligrams",
NIAEQmg_column = "Niacin_eq_milligrams",
NIATRPmg_column = "Niacine_from_TRP_mg",
comment_col = "comments_column")

NIA_results_nonstandard

# You can see how the results are the same as calculated above, regardless of
# the changed column names.

}
