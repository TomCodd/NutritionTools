% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ENERCKj_calculator.R
\name{ENERCKj_calculator}
\alias{ENERCKj_calculator}
\title{ENERCKj calculator
A function used to calculate Energy values in kj}
\usage{
ENERCKj_calculator(
  Protein = "PROCNTg",
  Fat = "FATg",
  Carbohydrate = "CHOAVLg",
  Fibre = "FIBTGg",
  Alcohol = "ALCg",
  df,
  comment_col = "comments",
  Stop_If_Missing = TRUE,
  Assume_Zero_Alcohol = FALSE,
  Show_NA_outputs = TRUE
)
}
\arguments{
\item{Protein}{Required - default: \code{"PROCNTg"} - If using \code{'df'},
then this should be the name of the column that contains Protein values in
grams. If NOT using \code{'df'}, this should be the number or list of
numbers representing Protein values you are looking to calculate an Energy
value using.}

\item{Fat}{Required - default: \code{"FATg"} - If using \code{'df'},
then this should be the name of the column that contains Total Fat values
in grams. If NOT using \code{'df'}, this should be the number or list of
numbers representing Fat values you are looking to calculate an Energy
value using.}

\item{Carbohydrate}{Required - default: \code{"CHOAVLg"} - If using
\code{'df'}, then this should be the name of the column that contains
Available Carbohydrate values in grams. If NOT using \code{'df'}, this
should be the number or list of numbers representing Available Carbohydrate
values you are looking to calculate an Energy value using.}

\item{Fibre}{Required - default: \code{"FIBTGg"} - If using
\code{'df'}, then this should be the name of the column that contains Fibre
values in grams. If NOT using \code{'df'}, this should be the number or
list of numbers representing Fibre values you are looking to calculate an
Energy value using.}

\item{Alcohol}{Required - default: \code{"ALCg"} - If using \code{'df'}, then
this should be the name of the column that contains Alcohol values in
grams. If NOT using \code{'df'}, this should be the number or list of
numbers representing Alcohol values you are looking to calculate an Energy
value using. Note: This is the only Optional input. All items in all other
nutrient parameters must have a valid value for the calculation - however,
if Stop_If_Missing is set to \code{FALSE} (as it is by default), then
ALcohol values can contain blanks, which will be reset to 0.}

\item{df}{Optional - If using on a data.frame, then this input should be the
data.frame in question. If left blank, then the standard calculation will
take place instead.}

\item{comment_col}{Optional - default: \code{"comments"} - only relevant if
\code{'df'} is in use. The name of the comment column in the df. If there
isn't one present, then the function will create one to record the
calculation details.}

\item{Stop_If_Missing}{Required - default: \code{TRUE} - Either \code{TRUE}
or \code{FALSE}. If set to \code{TRUE}, then the function will stop if it
detects missing values in any of the columns or input values. If set to
\code{FALSE}, then the function will not stop if it detects missing values.
Missing values will lead to NA ENERCKj_calculated values.}

\item{Assume_Zero_Alcohol}{Required - default: \code{FALSE} - Either
\code{TRUE} or \code{FALSE}. If set to \code{TRUE}, and
\code{'Stop_If_Missing'} is set to \code{FALSE}, then missing alcohol
values will be set to 0, and a comment added if running the data.frame
calculation. if set to \code{FALSE}, then the Alcohol value will not
change.}

\item{Show_NA_outputs}{Required - default: \code{TRUE} - Either \code{TRUE}
or \code{FALSE}. If set to \code{TRUE} then if any NA values are generated
for ENERCKj_calculated, a data.frame of these values will be shown.}
}
\value{
If using the data.frame input, the return will be a data.frame with a
newly generated ENERCKj_calculated column. If not using the data.frame
input, then the return will be ENERCKj_calculated values calculated from
the input values put into the function.
}
\description{
This function has two modes. Either it works as a basic
calculator - The values for Total Protein in grams, Total Fat in grams
(ideally combined), Available Carbohydrate in grams, Fibre, Total Dietary
in grams and Alcohol in grams are combined to find the Energy in kj.

Alternatively, this function works as a data.frame calculator. If the
\code{'df'} input is used, then the Nutrient inputs should be the names of
the columns in \code{'df'} which contains the details of their namesakes.
The result of this function will be a new column in df with the
ENERCKj_calculated values.
}
\examples{
# data.frame calculation: ----

# For this example, we will use the breakfast_df example dataset. However,
# that dataset has been designed to test a range of functions, and in its raw
# form is incompatable with ENERCKj_calculator - therefore some changes will
# have to be made before it can be used.

# removing rows with many empty nutrient values
modified_breakfast_df <- breakfast_df[c(1:2, 4:8),]

modified_breakfast_df

modified_breakfast_df <- ENERCKj_calculator(
  df = modified_breakfast_df,
  Protein = "PROCNTg",
  Fat = "FAT_g_combined",
  Carbohydrate = "CHOAVLg",
  Fibre = "FIBTGg_combined",
  Alcohol = "ALCg"
)

modified_breakfast_df

# However, if some of the options are changed, the function can accept any
# input - however, this is not advised. This will result in only
# partial coverage of the data.frame, as the things that stopped the function
# running before will lead to NA results now.

# Before:

breakfast_df_1 <- ENERCKj_calculator(
  df = breakfast_df,
  Protein = "PROCNTg",
  Fat = "FAT_g_combined",
  Carbohydrate = "CHOAVLg",
  Fibre = "FIBTGg_combined",
  Alcohol = "ALCg"
)

breakfast_df_1

# In this case, the missing Alcohol values are preventing the function
# running. They have been returned as the df, to allow you to fix these issues
# and then run it again, and to allow you to see where this issue is occurring.

# After:

breakfast_df_2 <- ENERCKj_calculator(
  df = breakfast_df,
  Protein = "PROCNTg",
  Fat = "FAT_g_combined",
  Carbohydrate = "CHOAVLg",
  Fibre = "FIBTGg_combined",
  Alcohol = "ALCg",
  Stop_If_Missing = FALSE
)

breakfast_df_2

# There are NA values for where Alcohol is missing, and where Fat is missing.

# This can be further modified, however. If there are missing Alcohol values,
# but the rest of the values are there, it is possible to set the function to
# set missing alcohol values to 0, through Stop_If_Missing = FALSE and
# Assume_Zero_Alcohol = TRUE.

modified_breakfast_df_2 <- breakfast_df
modified_breakfast_df_2[5, "ALCg"] <- NA

# Here we have artificially created this situation. When running the function
# with only Stop_If_Missing = FALSE, this is the result:

modified_breakfast_df_2_output_1 <- ENERCKj_calculator(
  df = modified_breakfast_df_2,
  Protein = "PROCNTg",
  Fat = "FAT_g_combined",
  Carbohydrate = "CHOAVLg",
  Fibre = "FIBTGg_combined",
  Alcohol = "ALCg",
  Stop_If_Missing = FALSE
)

modified_breakfast_df_2_output_1

# However, if we change the other option as well:

modified_breakfast_df_2_output_2 <- ENERCKj_calculator(
  df = modified_breakfast_df_2,
  Protein = "PROCNTg",
  Fat = "FAT_g_combined",
  Carbohydrate = "CHOAVLg",
  Fibre = "FIBTGg_combined",
  Alcohol = "ALCg",
  Stop_If_Missing = FALSE,
  Assume_Zero_Alcohol = TRUE
)

modified_breakfast_df_2_output_2

# We can see that the function has run, and the row with the missing Alcohol
# value has been able to generate a result - as well as having its ALcohol
# value changed. An additional comment has been added to record this change.



#Single calculation: ----

#Bread, wheat, white, unfortified

Protein_value <- 7.5
Fat_value <- 1.3
Carb_value <- 50.5
Fibre_value <- 2.9
Alcohol_value <- 0

ENERCKj_calculated <- ENERCKj_calculator(Protein = Protein_value, Fat = Fat_value,
Carbohydrate = Carb_value, Fibre = Fibre_value, Alcohol = Alcohol_value)

ENERCKj_calculated

#alternatively:

ENERCKj_calculated_2 <- ENERCKj_calculator(7.5, 1.3, 50.5, 2.9, 0)

ENERCKj_calculated_2

# Or, for multiple values (secondary values are fictional):

ENERCKj_calculated_3 <- ENERCKj_calculator(c(7.5, 5), c(1.3, 2), c(50.5,
51.5), c(2.9, 5), c(0, 1))

ENERCKj_calculated_3

# However, if there are blank values, then the function will not work

ENERCKj_calculated_4 <- ENERCKj_calculator(c(7.5, 5), c(1.3, 2), c(50.5,
51.5), c(2.9, 5), c(0, NA))

# Unless other options are selected - such as Stop_If_Missing is turned off

ENERCKj_calculated_5 <- ENERCKj_calculator(c(7.5, 5), c(1.3, 2), c(50.5,
51.5), c(2.9, 5), c(0, NA), Stop_If_Missing = FALSE)

ENERCKj_calculated_5

# In this format we can apply Assume_Zero_Alcohol as well

ENERCKj_calculated_6 <- ENERCKj_calculator(c(7.5, 5), c(1.3, 2), c(50.5,
51.5), c(2.9, 5), c(0, NA), Stop_If_Missing = FALSE, Assume_Zero_Alcohol =
TRUE)

ENERCKj_calculated_6
}
